---
title: Custom fields for test runs and test results
description: Store additional attrobutes again the test runs an test results
ms.assetid: 606679F2-1604-40EA-A720-63CDDA93DD76
ms.service: azure-devops-test-plans
ms.custom: UpdateFrequency3
ms.topic: how-to
ms.author: bjnaousek
author: bohdan-janousek
ms.date: 26/07/2024
monikerRange: '<= azure-devops'
---

# Custom fields

[!INCLUDE [version-lt-eq-azure-devops](../includes/version-lt-eq-azure-devops.md)]
[!INCLUDE [version-vs-gt-2015](../includes/version-vs-gt-2015.md)]

Using the custom fields allows [storing the custom data](#store-custom-data) against the test run and/or test result.
There can be up to 100 custom fields defined for a single Azure DevOps project.
Project administrator can [manage (add/delete) the set of the custom fields](#managing-custom-fields).

<a name="managing-custom-fields"></a>

## Managing the custom fields

There are two ways to manage the custom fields. This can be done either via [REST API](/rest/api/azure/devops/testresults/extensionfields)
or project administrator can do that through the “Project settings” while choosing “Test management” under “Pipelines”.
On that page (see below) new custom field can be added by clicking on the “+ Add new” button.
:::image type="content" source="./media/custom-fields/test-management-settings.png" alt-text="Screenshot of project settings with the test managment settings selected and the button to add new custome field marked by red rectangle.":::

Each custom field must have a name, type configured and indicate what type of the artifact it applies to. The UI allowing to set these (after clicking on the “+ Add new” button) is below.
:::image type="content" source="./media/custom-fields/add-custom-field.png" alt-text="Screenshot of a dialog used to add new custom field.":::

The name of custom field cannot be longer than 50 characters (space, numbers and special characters are not allowed) and must be unique in the project. The names are case insensitive, so you cannot have one customer field named “Test” as the other one named “test”.
Type can be one of the following:
•	Bit
•	DateTime
•	Int
•	Float
•	String
•	Guid
The existing custom fields can either be edited (only name can be changed) or removed. 

NOTE: After removing the custom field, you cannot use its name for about a day. The background process that is removing the deleted custom fields permanently is run ones a day.

<a name="store-custom-data"></a>

## Storing custom data into custom fields

To store your custom data into the configured custom fields you either can use  as part of the test run/result creation or after the test run/result was created.
To get the values stored in these custom fields for the existing test run/result, user need to use the REST API.
For the moment we do not display the custom fields and values stored in these on the Azure DevOps UI (we will be adding that ability in the future).

When you’re creating test run and/or result via REST API and want to use the custom fields (to store value in any of these), then best option is to do that as part of the test run and/or result creation. To create a test run call https://learn.microsoft.com/rest/api/azure/devops/test/runs/create and to create test result call https://learn.microsoft.com/rest/api/azure/devops/test/results/add.
When the test run and/or result is not created via REST API but by other means, then you must find the identification of the test run or result for which you want to set (or update) the values in the custom fields and the call REST API https://learn.microsoft.com/rest/api/azure/devops/test/runs/update for test run and https://learn.microsoft.com/rest/api/azure/devops/test/results/update for test result.

To retrieve data from the custom fields stored previously against test run and/or result, you need to know the identification of the test run or result. Then you can call REST API https://learn.microsoft.com/rest/api/azure/devops/test/runs/query for test run and https://learn.microsoft.com/rest/api/azure/devops/test/results/get for test result.
The data for the custom fields are sent or received in the array. Each item of that array contains two properties “fieldname” and “value” – see for example here https://learn.microsoft.com/rest/api/azure/devops/test/results/get#customtestfield. The value is object of the type as per definition for the custom field. To understand the type of the custom field you may was to use following REST API call https://learn.microsoft.com/rest/api/azure/devops/testresults/extensionfields/query that provides array of the custom fields. For each field you can find out its ID, name, type and scope. You may also hardcode the type assuming you know what type the field of given name is.

